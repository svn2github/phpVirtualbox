
## where to send error-messages to
#server.errorlog             = "logs/lighttpd-srv.error.log"
#accesslog.filename          = "logs/lighttpd-srv.access.log"

## to help the rc.scripts
#server.pid-file            = "logs/lighttpd-srv.pid"

## a static document-root, for virtual-hosting take look at the
## server.virtual-* options
server.document-root        = "HTDOCS/"

######### Options that are good to be but not neccesary to be changed #######

## bind to port (default: 80)
#server.port                = 8080

## bind to localhost (default: all interfaces)
#server.bind                = "mydomain.org"

#### CGI module
cgi.assign                  = ( ".php" => "PHP/php-cgi.exe" )

#### SSL engine
#ssl.engine                 = "enable"
#ssl.pemfile                = "server.pem"

auth.require               = ( "/server-status" =>
                               (
                                 "method"  => "digest",
                                 "realm"   => "Server status",
                                 "require" => "user=admin"
                               )
                               )

#### auth module
## read authentication.txt for more info
#auth.backend               = "plain"
#auth.backend.plain.userfile = "conf/lighttpd-auth.conf"
#auth.backend.plain.groupfile = "conf/lighttpd-group.conf"


############ Options you really have to take care of ####################

## modules to load
# at least mod_access and mod_accesslog should be loaded
# all other module should only be loaded if really neccesary
# - saves some time
# - saves memory
server.modules              = (
                                "mod_access",
                                "mod_accesslog",
                                "mod_alias",
                                "mod_auth",
                                "mod_cgi",
                                "mod_fastcgi",
                                "mod_indexfile",
                               )

# files to check for if .../ is requested
index-file.names            = ( "index.php", "index.html", "index.htm" )

# mimetype mapping
mimetype.assign             = (
  ".pdf"          =>      "application/pdf",
  ".sig"          =>      "application/pgp-signature",
  ".spl"          =>      "application/futuresplash",
  ".class"        =>      "application/octet-stream",
  ".ps"           =>      "application/postscript",
  ".torrent"      =>      "application/x-bittorrent",
  ".dvi"          =>      "application/x-dvi",
  ".gz"           =>      "application/x-gzip",
  ".pac"          =>      "application/x-ns-proxy-autoconfig",
  ".swf"          =>      "application/x-shockwave-flash",
  ".tar.gz"       =>      "application/x-tgz",
  ".tgz"          =>      "application/x-tgz",
  ".tar"          =>      "application/x-tar",
  ".zip"          =>      "application/zip",
  ".mp3"          =>      "audio/mpeg",
  ".m3u"          =>      "audio/x-mpegurl",
  ".wma"          =>      "audio/x-ms-wma",
  ".wax"          =>      "audio/x-ms-wax",
  ".ogg"          =>      "application/ogg",
  ".wav"          =>      "audio/x-wav",
  ".gif"          =>      "image/gif",
  ".jpg"          =>      "image/jpeg",
  ".jpeg"         =>      "image/jpeg",
  ".png"          =>      "image/png",
  ".xbm"          =>      "image/x-xbitmap",
  ".xpm"          =>      "image/x-xpixmap",
  ".xwd"          =>      "image/x-xwindowdump",
  ".css"          =>      "text/css",
  ".html"         =>      "text/html",
  ".htm"          =>      "text/html",
  ".js"           =>      "text/javascript",
  ".asc"          =>      "text/plain",
  ".c"            =>      "text/plain",
  ".cpp"          =>      "text/plain",
  ".log"          =>      "text/plain",
  ".conf"         =>      "text/plain",
  ".text"         =>      "text/plain",
  ".txt"          =>      "text/plain",
  ".dtd"          =>      "text/xml",
  ".xml"          =>      "text/xml",
  ".mpeg"         =>      "video/mpeg",
  ".mpg"          =>      "video/mpeg",
  ".mov"          =>      "video/quicktime",
  ".qt"           =>      "video/quicktime",
  ".avi"          =>      "video/x-msvideo",
  ".asf"          =>      "video/x-ms-asf",
  ".asx"          =>      "video/x-ms-asf",
  ".wmv"          =>      "video/x-ms-wmv",
  ".bz2"          =>      "application/x-bzip",
  ".tbz"          =>      "application/x-bzip-compressed-tar",
  ".tar.bz2"      =>      "application/x-bzip-compressed-tar"
 )

# Use the "Content-Type" extended attribute to obtain mime type if possible
mimetype.use-xattr          = "enable"

## deny access the file-extensions
#
# ~    is for backupfiles from vi, emacs, joe, ...
# .inc is often used for code includes which should in general not be part
#      of the document-root
#url.access-deny             = ( "~", ".inc" )


##
# which extensions should not be handle via static-file transfer
static-file.exclude-extensions = ( ".php" )


## enable debugging
#debug.log-request-header   = "enable"
#debug.log-response-header  = "enable"
#debug.log-request-handling = "enable"
#debug.log-file-not-found   = "enable"

server.tag                  = "LightTPD/1.4.26 (Win32)"
